package com.aca

import com.twitter.scalding._
import com.twitter.scalding.jdbc._
import cascading.jdbc._
import scala.io.Source
import com.aca.jdbc._
import java.util.Calendar
import java.text.SimpleDateFormat
import java.io.FileWriter

/*
Uses a Scalding job to write to a local file.  This works if you want everything to run as a job.
However, there is a lot of overhead with this approach just to get a local file written.
*/
class JobWriteCntl (args: Args) extends Job(args) {
	// get current date time and output in MM/DD/YYYY HH24:MI:SS format
	val today = Calendar.getInstance().getTime()
  	val format = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss")
	val todayString = format.format(today)
	println("todayString = " + todayString)

	val filename = "/tmp/aca/cntl/cntl.txt"
	val fileContents = Source.fromFile(filename).getLines.mkString
	println("START control date = " + fileContents)

	val fw = new FileWriter(filename)
	fw.write(todayString)
	fw.close()
	println("END control date = " + todayString)

	// a job has to have an input and output so just use dummy ones
	Tsv("/tmp/aca/dummyIn").read.write(Tsv("tmp/aca/dummyOut"))
}
