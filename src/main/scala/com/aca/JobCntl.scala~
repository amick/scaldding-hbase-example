package com.aca

import com.twitter.scalding._
import com.twitter.scalding.jdbc._
import cascading.jdbc._
import com.aca.jdbc._

class JobCntl (args: Args) extends Job(args) {
	val controlDate = CntlFile.getValue("/tmp/aca/cntl/cntl.txt")
	/*
		get system time before the job runs so this value can be written to the control file.  Don't want to get
		the value after the job is complete because data could have been added between start and finish time and 
		that data would be missed on the next run
	*/
	val startDateTime = CntlFile.getSystemTime
	FlowcalTable_FC_METER.read.write(Tsv( args("output_fc")+"/FC_METER" ))

	override def next: Option[Job] = {
		CntlFile.update("/tmp/aca/cntl/cntl.txt", startDateTime)
		None
	}
}
